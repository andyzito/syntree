@startuml 
title Syntree Class Diagram 
class Action {
    id : number
    type : string
}
class Arrow {
    getStartPoint()
    setStartPoint()
    setEndPoint()
    getEndPoint()
    __updateGraphics()
    __delete()
    getStartCtrlPoint()
    setStartCtrlPoint()
    setEndCtrlPoint()
    getEndCtrlPoint()
    isDeleted()
    isSelectable()
    delete()
    updateGraphics()
    isElement()
    isDeletable()
    getId()
    select()
    deselect()
    fromNode : Syntree.Node
    toNode : Syntree.Node
    path : string
    id : number
    selectable
    deleted : boolean
    selected : boolean
}
class Branch {
    isDeleted()
    isSelectable()
    delete()
    updateGraphics()
    isElement()
    isDeletable()
    getId()
    select()
    deselect()
    id : number
    selectable
    deleted : boolean
    selected : boolean
}
class Element {
    isDeleted()
    isSelectable()
    delete()
    updateGraphics()
    isElement()
    isDeletable()
    getId()
    id : number
    selectable
    deleted : boolean
}
class Graphic {
    Syntree.Arrow#createGraphic()
    addElement()
    getSVGString()
    _defaultAttrHandler()
    getAllEls()
    getEl()
    unsync()
    sync()
    update()
    delete()
    _handlerBoolean()
    elements_to_add : object
    states_synced : object
    update_map : object
    data_object : Syntree.Element
    elements : object
}
class Node {
    createGraphic()
    getPosition()
    getLabelContent()
    setLabelContent()
    getLabelBBox()
    getParent()
    getChildren()
    getPath()
    getState()
    move()
    __delete()
    __deselect()
    editingAction()
    __updateGraphics()
    addChild()
    isDeleted()
    isSelectable()
    delete()
    updateGraphics()
    isElement()
    isDeletable()
    getId()
    select()
    deselect()
    id : number
    x : number
    y : number
    labelContent : string
    lastSyncedPosition : object
    parent : Syntree.Node
    children : Array.<Syntree.Node>
    parentBranch : Syntree.Branch
    childBranches : Array.<Syntree.Branch>
    editing : Boolean
    real : Boolean
    _labelbbox : object
    selectable
    deleted : boolean
    selected : boolean
}
class SelectableElement {
    select()
    deselect()
    isDeleted()
    isSelectable()
    delete()
    updateGraphics()
    isElement()
    isDeletable()
    getId()
    selected : boolean
    id : number
    selectable
    deleted : boolean
}
class Page {
    getTransform()
    register()
    deregister()
    select()
    deselect()
    deleteTree()
    isRegistered()
    getSelected()
    getElementsByType()
    createMovementArrow()
    addTree()
    openTree()
    getSVGString()
    getNearestNode()
    navigateHorizontal()
    navigateUp()
    navigateDown()
    nodeEditing()
    _enablePanning()
    background
    group : object
    allElements : object
    selectedElement : Syntree.SelectableElement
}
class Tree {
    getId()
    setId()
    getRoot()
    _getPath()
    getDescendantsOf()
    getNodeOffset()
    getNodesByOffset()
    getTreestring()
    getBracketNotation()
    distribute()
    delete()
    _buildFromTreestring()
    id : number
    rowHeight : number
    root : Syntree.Node
    build_treestring : string
    node_properties_to_save : object
}
class History {
    addAction()
    getLast()
    getAll()
    getAllByType()
    getLastOfType()
    undo()
    removeAction()
    getNodeSelects()
    actions
    silent
}
class Lib {
    config()
    focusNoScroll()
    genId()
    typeOf()
    checkType()
    checkArg()
    distance()
    capitalize()
    getMidPoint()
    visualToActualCoordinates()
    extend()
    allIds
    idN
}
class Tutorial {
    continue()
    start()
    quit()
    frame()
    instruction()
    data : object
    standard_message_interval
    frames : object
    index : number
    running : boolean
}
class Workspace {
    _attachEventListeners()
    _eventTriangleButtonClick()
    _eventBranchClick()
    _eventArrowClick()
    _eventRewatchTutorial()
    _eventUndo()
    _eventNodeClick()
    _eventLeft()
    _eventRight()
    _eventUp()
    _eventDown()
    _eventDel()
    _eventEsc()
    _eventEditorTyping()
    _eventFiletypeLabelClick()
    _eventExportImage()
    _eventExportTreeFile()
    _eventExportBrackets()
    _eventEnter()
    tutorial_enabled : boolean
    upload_enabled : boolean
    export_tree_script : string
    focus_checking_enabled : boolean
}
class Workspace << (S,#FF7700) Singleton >>
class Lib << (S,#FF7700) Singleton >>
class History << (S,#FF7700) Singleton >>
class Tutorial << (S,#FF7700) Singleton >>
SelectableElement <|-- Node
SelectableElement <|-- Branch
SelectableElement <|-- Arrow
Element <|-- SelectableElement
Tree o-- Node
History *-- Action
Workspace --> Page
Page --> Tree
Page --> Element
Element *-- Graphic
skinparam monochrome true
skinparam shadowing false
skinparam dpi 150
@enduml